{"ast":null,"code":"var _jsxFileName = \"D:\\\\Xampp\\\\htdocs\\\\React\\\\covid19\\\\src\\\\Covid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport CovidData from './CovidData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Covid = () => {\n  _s();\n\n  const [countries, SetCountries] = useState(['']);\n  const [active, SetActive] = useState();\n  const [Total, SetTotal] = useState();\n  const [newCase, SetNewCase] = useState();\n  const [death, SetDeath] = useState();\n  const [newDeath, SetNewDeath] = useState();\n  const [recovered, SetRecovered] = useState();\n  const [newRecovered, SetNewRecovered] = useState();\n\n  const worldwide = async () => {\n    await fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      SetTotal(data.cases);\n      SetNewCase(data.todayCases);\n      SetDeath(data.deaths);\n      SetNewDeath(data.todayDeaths);\n      SetActive(data.active);\n      SetRecovered(data.recovered);\n      SetNewRecovered(data.todayRecovered);\n    });\n  };\n\n  const getcountry = async () => {\n    await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n      const countries = data.map(country => ({\n        name: country.country\n      }));\n      SetCountries(countries);\n    });\n  };\n\n  const getdatabycountry = event => {\n    async function getData() {\n      const res = await axios.get(`https://disease.sh/v3/covid-19/countries/${event.target.value}`);\n      SetTotal(res.data.cases);\n      SetNewCase(res.data.todayCases);\n      SetDeath(res.data.deaths);\n      SetNewDeath(res.data.todayDeaths);\n      SetActive(res.data.active);\n      SetRecovered(res.data.recovered);\n      SetNewRecovered(res.data.todayRecovered);\n    }\n\n    getData();\n    document.title = `Covid Tracker-${event.target.value}`;\n  };\n\n  useEffect(() => {\n    worldwide(); //  getcountry();\n\n    document.title = `Covid Tracker`;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_note\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"input\",\n          onChange: getdatabycountry,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            value: \"world Wide\",\n            children: \"world Wide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: country.name,\n            children: country.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CovidData, {\n      total: Total,\n      newCase: newCase,\n      death: death,\n      newDeath: newDeath,\n      active: active,\n      recovered: recovered,\n      newRecovered: newRecovered\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Covid, \"e5JVx+6U7wzlcPNg+JN2FU5sZf8=\");\n\n_c = Covid;\nexport default Covid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Covid\");","map":{"version":3,"sources":["D:/Xampp/htdocs/React/covid19/src/Covid.jsx"],"names":["React","useEffect","useState","axios","CovidData","Covid","countries","SetCountries","active","SetActive","Total","SetTotal","newCase","SetNewCase","death","SetDeath","newDeath","SetNewDeath","recovered","SetRecovered","newRecovered","SetNewRecovered","worldwide","fetch","then","response","json","data","cases","todayCases","deaths","todayDeaths","todayRecovered","getcountry","map","country","name","getdatabycountry","event","getData","res","get","target","value","document","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;;AAEA,MAAMC,KAAK,GAAC,MAAI;AAAA;;AAEZ,QAAM,CAACC,SAAD,EAAWC,YAAX,IAAyBL,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAvC;AACA,QAAM,CAACM,MAAD,EAAQC,SAAR,IAAmBP,QAAQ,EAAjC;AACA,QAAM,CAACQ,KAAD,EAAOC,QAAP,IAAiBT,QAAQ,EAA/B;AACA,QAAM,CAACU,OAAD,EAASC,UAAT,IAAqBX,QAAQ,EAAnC;AACA,QAAM,CAACY,KAAD,EAAOC,QAAP,IAAiBb,QAAQ,EAA/B;AACA,QAAM,CAACc,QAAD,EAAUC,WAAV,IAAuBf,QAAQ,EAArC;AACA,QAAM,CAACgB,SAAD,EAAWC,YAAX,IAAyBjB,QAAQ,EAAvC;AACA,QAAM,CAACkB,YAAD,EAAcC,eAAd,IAA+BnB,QAAQ,EAA7C;;AAEA,QAAMoB,SAAS,GAAE,YAAS;AACtB,UAAMC,KAAK,CAAC,oCAAD,CAAL,CACLC,IADK,CACCC,QAAD,IAAYA,QAAQ,CAACC,IAAT,EADZ,EAELF,IAFK,CAECG,IAAD,IAAQ;AACVhB,MAAAA,QAAQ,CAACgB,IAAI,CAACC,KAAN,CAAR;AACAf,MAAAA,UAAU,CAACc,IAAI,CAACE,UAAN,CAAV;AACAd,MAAAA,QAAQ,CAACY,IAAI,CAACG,MAAN,CAAR;AACAb,MAAAA,WAAW,CAACU,IAAI,CAACI,WAAN,CAAX;AACAtB,MAAAA,SAAS,CAACkB,IAAI,CAACnB,MAAN,CAAT;AACAW,MAAAA,YAAY,CAACQ,IAAI,CAACT,SAAN,CAAZ;AACAG,MAAAA,eAAe,CAACM,IAAI,CAACK,cAAN,CAAf;AACH,KAVK,CAAN;AAWH,GAZD;;AAaA,QAAMC,UAAU,GAAC,YAAS;AACtB,UAAMV,KAAK,CAAC,0CAAD,CAAL,CACLC,IADK,CACCC,QAAD,IAAYA,QAAQ,CAACC,IAAT,EADZ,EAELF,IAFK,CAECG,IAAD,IAAS;AACX,YAAMrB,SAAS,GAACqB,IAAI,CAACO,GAAL,CAAUC,OAAD,KAAY;AAChCC,QAAAA,IAAI,EAACD,OAAO,CAACA;AADmB,OAAZ,CAAT,CAAhB;AAGA5B,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACH,KAPK,CAAN;AAQF,GATF;;AAUC,QAAM+B,gBAAgB,GAAEC,KAAD,IAAS;AAC7B,mBAAeC,OAAf,GAAwB;AACpB,YAAMC,GAAG,GAAC,MAAMrC,KAAK,CAACsC,GAAN,CAAW,4CAA2CH,KAAK,CAACI,MAAN,CAAaC,KAAM,EAAzE,CAAhB;AACAhC,MAAAA,QAAQ,CAAC6B,GAAG,CAACb,IAAJ,CAASC,KAAV,CAAR;AACAf,MAAAA,UAAU,CAAC2B,GAAG,CAACb,IAAJ,CAASE,UAAV,CAAV;AACAd,MAAAA,QAAQ,CAACyB,GAAG,CAACb,IAAJ,CAASG,MAAV,CAAR;AACAb,MAAAA,WAAW,CAACuB,GAAG,CAACb,IAAJ,CAASI,WAAV,CAAX;AACAtB,MAAAA,SAAS,CAAC+B,GAAG,CAACb,IAAJ,CAASnB,MAAV,CAAT;AACAW,MAAAA,YAAY,CAACqB,GAAG,CAACb,IAAJ,CAAST,SAAV,CAAZ;AACAG,MAAAA,eAAe,CAACmB,GAAG,CAACb,IAAJ,CAASK,cAAV,CAAf;AACH;;AACDO,IAAAA,OAAO;AACPK,IAAAA,QAAQ,CAACC,KAAT,GAAgB,iBAAgBP,KAAK,CAACI,MAAN,CAAaC,KAAM,EAAnD;AACH,GAbA;;AAcD1C,EAAAA,SAAS,CAAC,MAAI;AACTqB,IAAAA,SAAS,GADA,CAEV;;AACCsB,IAAAA,QAAQ,CAACC,KAAT,GAAgB,eAAhB;AACJ,GAJQ,EAIP,EAJO,CAAT;AAOA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,OAAlB;AAA0B,UAAA,QAAQ,EAAER,gBAApC;AAAA,kCACI;AAAQ,YAAA,QAAQ,MAAhB;AAAiB,YAAA,KAAK,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEK/B,SAAS,CAAC4B,GAAV,CAAeC,OAAD,iBACX;AAAQ,YAAA,KAAK,EAAEA,OAAO,CAACC,IAAvB;AAAA,sBAA8BD,OAAO,CAACC;AAAtC;AAAA;AAAA;AAAA;AAAA,kBADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI,QAAC,SAAD;AACI,MAAA,KAAK,EAAE1B,KADX;AAEI,MAAA,OAAO,EAAEE,OAFb;AAGI,MAAA,KAAK,EAAEE,KAHX;AAII,MAAA,QAAQ,EAAEE,QAJd;AAKI,MAAA,MAAM,EAAER,MALZ;AAMI,MAAA,SAAS,EAAEU,SANf;AAOI,MAAA,YAAY,EAAEE;AAPlB;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA,kBADJ;AAuBH,CA9ED;;GAAMf,K;;KAAAA,K;AAgFN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport CovidData from './CovidData'\r\n\r\nconst Covid=()=>{\r\n\r\n    const [countries,SetCountries]=useState(['']);\r\n    const [active,SetActive]=useState();\r\n    const [Total,SetTotal]=useState();\r\n    const [newCase,SetNewCase]=useState();\r\n    const [death,SetDeath]=useState();\r\n    const [newDeath,SetNewDeath]=useState();\r\n    const [recovered,SetRecovered]=useState();\r\n    const [newRecovered,SetNewRecovered]=useState();   \r\n\r\n    const worldwide= async()=>{\r\n        await fetch(\"https://disease.sh/v3/covid-19/all\")\r\n        .then((response)=>response.json()) \r\n        .then((data)=>{\r\n            SetTotal(data.cases)\r\n            SetNewCase(data.todayCases)\r\n            SetDeath(data.deaths)\r\n            SetNewDeath(data.todayDeaths)\r\n            SetActive(data.active)\r\n            SetRecovered(data.recovered)\r\n            SetNewRecovered(data.todayRecovered)\r\n        })\r\n    }\r\n    const getcountry=async()=>{\r\n        await fetch(\"https://disease.sh/v3/covid-19/countries\") \r\n        .then((response)=>response.json()) \r\n        .then((data) =>{\r\n            const countries=data.map((country)=>({\r\n                 name:country.country,   \r\n            }));\r\n            SetCountries(countries);\r\n        });\r\n     };\r\n     const getdatabycountry=(event)=>{\r\n        async function getData(){\r\n            const res=await axios.get(`https://disease.sh/v3/covid-19/countries/${event.target.value}`)\r\n            SetTotal(res.data.cases)\r\n            SetNewCase(res.data.todayCases)\r\n            SetDeath(res.data.deaths)\r\n            SetNewDeath(res.data.todayDeaths)\r\n            SetActive(res.data.active)\r\n            SetRecovered(res.data.recovered)\r\n            SetNewRecovered(res.data.todayRecovered)\r\n        }\r\n        getData();\r\n        document.title=`Covid Tracker-${event.target.value}`\r\n    }\r\n    useEffect(()=>{\r\n         worldwide();\r\n        //  getcountry();\r\n         document.title=`Covid Tracker`\r\n    },[]);\r\n\r\n    \r\n    return(\r\n        <>\r\n            <div className='main_note'>\r\n                <form>\r\n                    <select className=\"input\" onChange={getdatabycountry}>\r\n                        <option selected value=\"world Wide\">world Wide</option>\r\n                        {countries.map((country)=>(\r\n                            <option value={country.name}>{country.name}</option>\r\n                        ))}\r\n                    </select>\r\n                </form>\r\n            </div>\r\n            <CovidData\r\n                total={Total}\r\n                newCase={newCase}\r\n                death={death}\r\n                newDeath={newDeath}\r\n                active={active}\r\n                recovered={recovered}\r\n                newRecovered={newRecovered}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Covid"]},"metadata":{},"sourceType":"module"}