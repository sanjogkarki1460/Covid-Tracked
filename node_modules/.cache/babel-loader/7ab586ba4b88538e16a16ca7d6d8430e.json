{"ast":null,"code":"var _jsxFileName = \"D:\\\\Xampp\\\\htdocs\\\\React\\\\covid19\\\\src\\\\Covid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport CovidData from './CovidData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Covid = () => {\n  _s();\n\n  const [countries, SetCountries] = useState(['']);\n  const [active, SetActive] = useState();\n  const [Total, SetTotal] = useState();\n  const [newCase, SetNewCase] = useState();\n  const [death, SetDeath] = useState();\n  const [newDeath, SetNewDeath] = useState();\n  const [recovered, SetRecovered] = useState();\n  const [newRecovered, SetNewRecovered] = useState();\n  const [loader, SetLoader] = useState(false);\n\n  const worldwide = async () => {\n    SetLoader(true);\n    await fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      SetTotal(data.cases);\n      SetNewCase(data.todayCases);\n      SetDeath(data.deaths);\n      SetNewDeath(data.todayDeaths);\n      SetActive(data.active);\n      SetRecovered(data.recovered);\n      SetNewRecovered(data.todayRecovered);\n      SetLoader(false);\n    });\n  };\n\n  const getcountry = async () => {\n    await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n      const countries = data.map(country => ({\n        name: country.country\n      }));\n      SetCountries(countries);\n    });\n  };\n\n  const getdatabycountry = event => {\n    SetLoader(true);\n\n    async function getData() {\n      const res = await axios.get(`https://disease.sh/v3/covid-19/countries/${event.target.value}`);\n      SetTotal(res.data.cases);\n      SetNewCase(res.data.todayCases);\n      SetDeath(res.data.deaths);\n      SetNewDeath(res.data.todayDeaths);\n      SetActive(res.data.active);\n      SetRecovered(res.data.recovered);\n      SetNewRecovered(res.data.todayRecovered);\n      SetLoader(false);\n    }\n\n    getData();\n    document.title = `Covid Tracker-${event.target.value}`;\n  };\n\n  const getdata = event => {\n    if (event.target.value == '') {\n      worldwide();\n    } else {\n      getdatabycountry(event);\n    }\n  };\n\n  useEffect(() => {\n    worldwide();\n    getcountry();\n    document.title = `Covid Tracker`;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_note\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"input\",\n          onChange: getdata,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            value: \"\",\n            children: \"world Wide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: country.name,\n            children: country.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), loader == true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: process.env.PUBLIC_URL + 'loader.gif'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(CovidData, {\n      total: Total,\n      newCase: newCase,\n      death: death,\n      newDeath: newDeath,\n      active: active,\n      recovered: recovered,\n      newRecovered: newRecovered\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Covid, \"E1BV+daGj+XSChSYAt8nNg2gqS4=\");\n\n_c = Covid;\nexport default Covid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Covid\");","map":{"version":3,"sources":["D:/Xampp/htdocs/React/covid19/src/Covid.jsx"],"names":["React","useEffect","useState","axios","CovidData","Covid","countries","SetCountries","active","SetActive","Total","SetTotal","newCase","SetNewCase","death","SetDeath","newDeath","SetNewDeath","recovered","SetRecovered","newRecovered","SetNewRecovered","loader","SetLoader","worldwide","fetch","then","response","json","data","cases","todayCases","deaths","todayDeaths","todayRecovered","getcountry","map","country","name","getdatabycountry","event","getData","res","get","target","value","document","title","getdata","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport CovidData from './CovidData'\r\n\r\nconst Covid = () => {\r\n    const [countries, SetCountries] = useState(['']);\r\n    const [active, SetActive] = useState();\r\n    const [Total, SetTotal] = useState();\r\n    const [newCase, SetNewCase] = useState();\r\n    const [death, SetDeath] = useState();\r\n    const [newDeath, SetNewDeath] = useState();\r\n    const [recovered, SetRecovered] = useState();\r\n    const [newRecovered, SetNewRecovered] = useState();\r\n    const [loader, SetLoader] = useState(false);\r\n\r\n    const worldwide = async () => {\r\n        SetLoader(true)\r\n        await fetch(\"https://disease.sh/v3/covid-19/all\")\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                SetTotal(data.cases)\r\n                SetNewCase(data.todayCases)\r\n                SetDeath(data.deaths)\r\n                SetNewDeath(data.todayDeaths)\r\n                SetActive(data.active)\r\n                SetRecovered(data.recovered)\r\n                SetNewRecovered(data.todayRecovered)\r\n                SetLoader(false)\r\n            })\r\n    }\r\n    const getcountry = async () => {\r\n        await fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                const countries = data.map((country) => ({\r\n                    name: country.country,\r\n                }));\r\n                SetCountries(countries);\r\n            });\r\n    };\r\n    const getdatabycountry = (event) => {\r\n        SetLoader(true)\r\n        async function getData() {\r\n            const res = await axios.get(`https://disease.sh/v3/covid-19/countries/${event.target.value}`)\r\n            SetTotal(res.data.cases)\r\n            SetNewCase(res.data.todayCases)\r\n            SetDeath(res.data.deaths)\r\n            SetNewDeath(res.data.todayDeaths)\r\n            SetActive(res.data.active)\r\n            SetRecovered(res.data.recovered)\r\n            SetNewRecovered(res.data.todayRecovered)\r\n            SetLoader(false)\r\n        }\r\n        getData();\r\n        document.title = `Covid Tracker-${event.target.value}`\r\n    }\r\n\r\n    const getdata = (event) => {\r\n        if (event.target.value == '') {\r\n            worldwide();\r\n        }\r\n        else {\r\n            getdatabycountry(event);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        worldwide();\r\n        getcountry();\r\n        document.title = `Covid Tracker`\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='main_note'>\r\n                <form>\r\n                    <select className=\"input\" onChange={getdata}>\r\n                        <option selected value=\"\">world Wide</option>\r\n                        {countries.map((country) => (\r\n                            <option value={country.name}>{country.name}</option>\r\n                        ))}\r\n                    </select>\r\n                </form>\r\n            </div>\r\n            {loader == true ?\r\n                <div className='loader-image'>\r\n                    <img src={process.env.PUBLIC_URL + 'loader.gif'} />\r\n                </div>\r\n                :\r\n                <CovidData\r\n                    total={Total}\r\n                    newCase={newCase}\r\n                    death={death}\r\n                    newDeath={newDeath}\r\n                    active={active}\r\n                    recovered={recovered}\r\n                    newRecovered={newRecovered}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Covid"]},"metadata":{},"sourceType":"module"}