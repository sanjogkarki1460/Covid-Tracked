{"ast":null,"code":"import _regeneratorRuntime from\"D:/Xampp/htdocs/React/covid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Xampp/htdocs/React/covid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/Xampp/htdocs/React/covid19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import axios from'axios';import CovidData from'./CovidData';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Covid=function Covid(){var _useState=useState(['']),_useState2=_slicedToArray(_useState,2),countries=_useState2[0],SetCountries=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),active=_useState4[0],SetActive=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),Total=_useState6[0],SetTotal=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),newCase=_useState8[0],SetNewCase=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),death=_useState10[0],SetDeath=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),newDeath=_useState12[0],SetNewDeath=_useState12[1];var _useState13=useState(),_useState14=_slicedToArray(_useState13,2),recovered=_useState14[0],SetRecovered=_useState14[1];var _useState15=useState(),_useState16=_slicedToArray(_useState15,2),newRecovered=_useState16[0],SetNewRecovered=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),loader=_useState18[0],SetLoader=_useState18[1];var worldwide=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:SetLoader(true);_context.next=3;return fetch(\"https://disease.sh/v3/covid-19/all\").then(function(response){return response.json();}).then(function(data){SetTotal(data.cases);SetNewCase(data.todayCases);SetDeath(data.deaths);SetNewDeath(data.todayDeaths);SetActive(data.active);SetRecovered(data.recovered);SetNewRecovered(data.todayRecovered);SetLoader(false);});case 3:case\"end\":return _context.stop();}}},_callee);}));return function worldwide(){return _ref.apply(this,arguments);};}();var getcountry=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"https://disease.sh/v3/covid-19/countries\").then(function(response){return response.json();}).then(function(data){var countries=data.map(function(country){return{name:country.country};});SetCountries(countries);});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function getcountry(){return _ref2.apply(this,arguments);};}();var getdatabycountry=function getdatabycountry(event){SetLoader(true);function getData(){return _getData.apply(this,arguments);}function _getData(){_getData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return axios.get(\"https://disease.sh/v3/covid-19/countries/\".concat(event.target.value));case 2:res=_context3.sent;SetTotal(res.data.cases);SetNewCase(res.data.todayCases);SetDeath(res.data.deaths);SetNewDeath(res.data.todayDeaths);SetActive(res.data.active);SetRecovered(res.data.recovered);SetNewRecovered(res.data.todayRecovered);SetLoader(false);case 11:case\"end\":return _context3.stop();}}},_callee3);}));return _getData.apply(this,arguments);}getData();document.title=\"Covid Tracker-\".concat(event.target.value);};var getdata=function getdata(event){if(event.target.value===''){worldwide();}else{getdatabycountry(event);}};useEffect(function(){worldwide();getcountry();document.title=\"Covid Tracker\";},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"main_note\",children:/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsxs(\"select\",{className:\"input\",onChange:getdata,children:[/*#__PURE__*/_jsx(\"option\",{defaultValue:true,value:\"\",children:\"world Wide\"}),countries.map(function(country,index){return/*#__PURE__*/_jsx(\"option\",{value:country.name,children:country.name},index);})]})})}),loader===true?/*#__PURE__*/_jsx(\"div\",{className:\"loader-image\",children:/*#__PURE__*/_jsx(\"img\",{src:process.env.PUBLIC_URL+'loader.gif',alt:\"loader\"})}):/*#__PURE__*/_jsx(CovidData,{total:Total,newCase:newCase,death:death,newDeath:newDeath,active:active,recovered:recovered,newRecovered:newRecovered})]});};export default Covid;","map":{"version":3,"sources":["D:/Xampp/htdocs/React/covid19/src/Covid.jsx"],"names":["React","useEffect","useState","axios","CovidData","Covid","countries","SetCountries","active","SetActive","Total","SetTotal","newCase","SetNewCase","death","SetDeath","newDeath","SetNewDeath","recovered","SetRecovered","newRecovered","SetNewRecovered","loader","SetLoader","worldwide","fetch","then","response","json","data","cases","todayCases","deaths","todayDeaths","todayRecovered","getcountry","map","country","name","getdatabycountry","event","getData","get","target","value","res","document","title","getdata","index","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport CovidData from './CovidData'\r\n\r\nconst Covid = () => {\r\n    const [countries, SetCountries] = useState(['']);\r\n    const [active, SetActive] = useState();\r\n    const [Total, SetTotal] = useState();\r\n    const [newCase, SetNewCase] = useState();\r\n    const [death, SetDeath] = useState();\r\n    const [newDeath, SetNewDeath] = useState();\r\n    const [recovered, SetRecovered] = useState();\r\n    const [newRecovered, SetNewRecovered] = useState();\r\n    const [loader, SetLoader] = useState(false);\r\n\r\n    const worldwide = async () => {\r\n        SetLoader(true)\r\n        await fetch(\"https://disease.sh/v3/covid-19/all\")\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                SetTotal(data.cases)\r\n                SetNewCase(data.todayCases)\r\n                SetDeath(data.deaths)\r\n                SetNewDeath(data.todayDeaths)\r\n                SetActive(data.active)\r\n                SetRecovered(data.recovered)\r\n                SetNewRecovered(data.todayRecovered)\r\n                SetLoader(false)\r\n            })\r\n    }\r\n    const getcountry = async () => {\r\n        await fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                const countries = data.map((country) => ({\r\n                    name: country.country,\r\n                }));\r\n                SetCountries(countries);\r\n            });\r\n    };\r\n    const getdatabycountry = (event) => {\r\n        SetLoader(true)\r\n        async function getData() {\r\n            const res = await axios.get(`https://disease.sh/v3/covid-19/countries/${event.target.value}`)\r\n            SetTotal(res.data.cases)\r\n            SetNewCase(res.data.todayCases)\r\n            SetDeath(res.data.deaths)\r\n            SetNewDeath(res.data.todayDeaths)\r\n            SetActive(res.data.active)\r\n            SetRecovered(res.data.recovered)\r\n            SetNewRecovered(res.data.todayRecovered)\r\n            SetLoader(false)\r\n        }\r\n        getData();\r\n        document.title = `Covid Tracker-${event.target.value}`\r\n    }\r\n\r\n    const getdata = (event) => {\r\n        if (event.target.value === '') {\r\n            worldwide();\r\n        }\r\n        else {\r\n            getdatabycountry(event);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        worldwide();\r\n        getcountry();\r\n        document.title = `Covid Tracker`\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='main_note'>\r\n                <form>\r\n                    <select className=\"input\" onChange={getdata}>\r\n                        <option defaultValue value=\"\">world Wide</option>\r\n                        {countries.map((country,index) => (\r\n                            <option key={index} value={country.name}>{country.name}</option>\r\n                        ))}\r\n                    </select>\r\n                </form>\r\n            </div>\r\n            {loader === true ?\r\n                <div className='loader-image'>\r\n                    <img src={process.env.PUBLIC_URL + 'loader.gif'} alt='loader'/>\r\n                </div>\r\n                :\r\n                <CovidData\r\n                    total={Total}\r\n                    newCase={newCase}\r\n                    death={death}\r\n                    newDeath={newDeath}\r\n                    active={active}\r\n                    recovered={recovered}\r\n                    newRecovered={newRecovered}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Covid"]},"metadata":{},"sourceType":"module"}